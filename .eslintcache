[{"D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\index.tsx":"1","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\App.tsx":"2","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\routes\\index.js":"3","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\pages\\Login\\styles.ts":"4","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\style\\index.ts":"5","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\services\\api.js":"6","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\services\\CallService.tsx":"7","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\pages\\Login\\Login.tsx":"8","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\services\\AuthService.tsx":"9","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\pages\\Home\\Home.tsx":"10","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\pages\\Home\\styles.ts":"11","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\components\\Calls\\index.tsx":"12","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\components\\Calls\\styles.ts":"13","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\services\\VerifyToken.tsx":"14","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\index.tsx":"15","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\App.tsx":"16","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\routes\\index.js":"17","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\services\\VerifyToken.tsx":"18","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\pages\\Home\\Home.tsx":"19","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\pages\\Login\\Login.tsx":"20","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\style\\index.ts":"21","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\pages\\Home\\styles.ts":"22","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\pages\\Login\\styles.ts":"23","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\services\\AuthService.tsx":"24","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\components\\Calls\\index.tsx":"25","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\services\\api.js":"26","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\components\\Calls\\styles.ts":"27","D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\services\\CallService.tsx":"28"},{"size":197,"mtime":1611323971895,"results":"29","hashOfConfig":"30"},{"size":120,"mtime":1611328386977,"results":"31","hashOfConfig":"30"},{"size":893,"mtime":1612225548999,"results":"32","hashOfConfig":"30"},{"size":2207,"mtime":1611668867603,"results":"33","hashOfConfig":"30"},{"size":400,"mtime":1611857310585,"results":"34","hashOfConfig":"30"},{"size":424,"mtime":1612226168405,"results":"35","hashOfConfig":"30"},{"size":537,"mtime":1612226360287,"results":"36","hashOfConfig":"30"},{"size":3100,"mtime":1612226143636,"results":"37","hashOfConfig":"30"},{"size":353,"mtime":1612226356527,"results":"38","hashOfConfig":"30"},{"size":561,"mtime":1611536618851,"results":"39","hashOfConfig":"30"},{"size":2707,"mtime":1611536433727,"results":"40","hashOfConfig":"30"},{"size":8756,"mtime":1612195010953,"results":"41","hashOfConfig":"30"},{"size":3575,"mtime":1611870222366,"results":"42","hashOfConfig":"30"},{"size":302,"mtime":1612226369792,"results":"43","hashOfConfig":"30"},{"size":197,"mtime":1611323971895,"results":"44","hashOfConfig":"45"},{"size":120,"mtime":1611328386977,"results":"46","hashOfConfig":"45"},{"size":893,"mtime":1612225548999,"results":"47","hashOfConfig":"45"},{"size":302,"mtime":1612226369792,"results":"48","hashOfConfig":"45"},{"size":561,"mtime":1611536618851,"results":"49","hashOfConfig":"45"},{"size":3100,"mtime":1612226143636,"results":"50","hashOfConfig":"45"},{"size":400,"mtime":1611857310585,"results":"51","hashOfConfig":"45"},{"size":2707,"mtime":1611536433727,"results":"52","hashOfConfig":"45"},{"size":2207,"mtime":1611668867603,"results":"53","hashOfConfig":"45"},{"size":353,"mtime":1612226356527,"results":"54","hashOfConfig":"45"},{"size":8756,"mtime":1612195010953,"results":"55","hashOfConfig":"45"},{"size":424,"mtime":1612226168405,"results":"56","hashOfConfig":"45"},{"size":3575,"mtime":1611870222366,"results":"57","hashOfConfig":"45"},{"size":537,"mtime":1612226360287,"results":"58","hashOfConfig":"45"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},"znppkp",{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"61"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"79","messages":"80","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"81","usedDeprecatedRules":"61"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"61"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"61"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"khnl5x",{"filePath":"93","messages":"94","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"101","messages":"102","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"105","messages":"106","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"111","messages":"112","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"113","messages":"114","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"115","messages":"116","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"117","messages":"118","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\index.tsx",[],["119","120"],"D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\App.tsx",[],"D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\routes\\index.js",["121"],"D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\pages\\Login\\styles.ts",[],"D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\style\\index.ts",["122"],"import styled, { createGlobalStyle } from 'styled-components';\r\n\r\nconst Global = createGlobalStyle`\r\n    *, h1{\r\n        margin: 0;\r\n        padding: 0;\r\n        outline: 0;\r\n        box-sizing: border-box;\r\n    }\r\n    body {\r\n    -webkit-font-smoothing: antialiased !important;\r\n    font-family: 'Roboto', sans-serif;\r\n    body html #root {\r\n    height: 100%;\r\n  }\r\n  }\r\n`;\r\n\r\nexport default Global;","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\services\\api.js",[],"D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\services\\CallService.tsx",["123"],"D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\pages\\Login\\Login.tsx",[],"D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\services\\AuthService.tsx",["124"],"D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\pages\\Home\\Home.tsx",["125","126","127","128","129","130"],"import React, { Component } from \"react\";\r\nimport { Container } from \"./styles\";\r\nimport MissedCall from \"../../assets/img/phone-call.svg\";\r\nimport CallService from \"../../services/CallService\";\r\nimport { RouteComponentProps } from \"react-router-dom\";\r\nimport Loading from \"../../assets/gifs/loading.gif\";\r\nimport Pagination from \"react-js-pagination\";\r\nimport Calls from \"../../components/Calls\";\r\n\r\n\r\nexport default class Home extends React.Component {\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n          <Calls/>\r\n      </Container>\r\n    );\r\n  }\r\n}\r\n","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\pages\\Home\\styles.ts",[],"D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\components\\Calls\\index.tsx",["131","132"],"import React, { Component } from \"react\";\nimport { Container } from \"./styles\";\nimport MissedCall from \"../../assets/img/phone-call.svg\";\nimport CallService from \"../../services/CallService\";\nimport { RouteComponentProps, withRouter } from \"react-router-dom\";\nimport Loading from \"../../assets/gifs/loading.gif\";\nimport arrowDown from \"../../assets/img/arrow-down.svg\";\nimport arrowUp from \"../../assets/img/arrow-up.svg\";\nimport Pagination from \"react-js-pagination\";\n\nexport interface Note {\n  id: string;\n  content: string;\n}\n\nexport interface Call {\n  call_type: string;\n  created_at: string;\n  direction: string;\n  duration: number;\n  from: string;\n  id: string;\n  is_archived: boolean;\n  notes: Note[];\n  to: string;\n  via: string;\n}\n\nexport interface RequestState {\n  [key: string]: any;\n  values: Call[];\n  submitSuccess: boolean;\n  loading: boolean;\n  offset?: any;\n  limit?: any;\n  totalCount: number;\n  hasNextPage: boolean;\n  detail: boolean;\n  types_call: string[];\n  type_call: string;\n  group_call: [];\n}\n\nclass Calls extends React.Component<RouteComponentProps, RequestState> {\n  listOfCalls: string[] = [];\n  constructor(props: RouteComponentProps) {\n    super(props);\n\n    this.state = {\n      call_type: \"\",\n      created_at: \"\",\n      direction: \"\",\n      duration: 0,\n      from: \"\",\n      id: \"\",\n      is_archived: false,\n      notes: [],\n      to: \"\",\n      via: \"\",\n      values: [],\n      submitSuccess: false,\n      loading: false,\n      offset: 1,\n      limit: 30,\n      totalCount: 1,\n      hasNextPage: true,\n      detail: false,\n      types_call: [],\n      type_call: \"All\",\n      group_call: [],\n    };\n  }\n  async componentDidMount() {\n   await this.getCalls();\n  }\n\n async getCalls() {\n    this.setState({ loading: true });\n    const request = new CallService();\n    try{\n     await request.getCalls(this.state.offset, this.state.limit).then(\n        (success) => {\n          this.setState({\n            submitSuccess: true,\n            values: success.nodes,\n            hasNextPage: success.hasNextPage,\n            totalCount: success.totalCount,\n            loading: false\n          });\n          this.onlyUniqueTypeCall();\n          this.setGroupCallValues();\n        })\n    }catch(e){\n      console.log(e);\n        this.setState({ loading: false, submitSuccess: false });\n    }\n  }\n\n  onlyUniqueTypeCall() {\n    let arrayTemp: string[] = [];\n    let valueState = this.state;\n    for (let item of valueState.values) {\n      if (!arrayTemp.includes(item.call_type)) {\n        arrayTemp.push(item.call_type);\n      }\n      this.setState({ types_call: arrayTemp });\n    }\n  }\n\n  async handleTypeCallChange(value: any) {\n   await this.setState({ type_call: value });\n    this.setGroupCallValues();\n  }\n\n  archiveCall(id: string) {\n    this.setState({ loading: true, submitSuccess: false });\n    const request = new CallService();\n    request.updateCalls(id).then(\n      () => {\n        this.setState({ loading: false, submitSuccess: true });\n        this.getCalls();\n      },\n      (error) => {\n        this.setState({ loading: false, submitSuccess: true });\n      }\n    );\n  }\n\n  async handlePageChange(pageNumber: number) {\n   await this.setState({ offset: pageNumber });\n    this.getCalls();\n  }\n\n  toggleDetailCall(id: any) {\n    if (this.listOfCalls.includes(id)) {\n      this.removeArray(id);\n    } else {\n      this.listOfCalls.push(id);\n      this.setState({ detail: true });\n    }\n    this.forceUpdate();\n  }\n\n  removeArray(element: any) {\n    const index = this.listOfCalls.indexOf(element);\n\n    if (index !== -1) {\n      this.listOfCalls.splice(index, 1);\n    }\n    this.setState({ detail: false });\n  }\n\n   setGroupCallValues = async()  => {\n    let groupBy = this.groupBy(this.state.values);\n    await this.setState({ group_call: groupBy });\n  }\n\n  groupBy = (xs: Call[]) => {\n    return xs.reduce((rv: any, x: any) => {\n      (this.state.type_call !== 'All' ? x.call_type === this.state.type_call : x) &&\n     (rv[new Date(x.created_at).toLocaleDateString()] =\n     rv[new Date(x.created_at).toLocaleDateString()] || []).push(x);\n      return rv;\n    }, {});\n  };\n\n  render() {\n    const { loading } = this.state;\n    return (\n      <Container>\n        <div className=\"content\">\n          {loading ? (\n            <div className=\"loading\">\n              <img src={Loading} width=\"100\" />\n            </div>\n          ) : (\n            <div className=\"calls\">\n              {Object.entries(this.state.group_call)\n                .sort().map(([key, value]) => (\n                  <div>\n                  <select value={this.state.type_call} name=\"call_type\" id=\"call_type\" onChange={e => this.handleTypeCallChange(e.target.value)}>\n                    <option value=\"All\">All</option>\n                    {this.state.types_call.map((type, key) =>\n                    <option key={key} value={type}>{type}</option>\n                    )}\n                  </select>\n                  <div className=\"group-call\">\n                  <div className=\"key\">\n                    <hr/>\n                   <span>\n                   {key}\n                  </span>\n                  <hr/>\n                  </div>  \n                    {Object(value).map((item: any) => (\n                      <div className=\"call\" key={item.id}>\n                        <div className=\"call-header\">\n                          <img src={MissedCall} alt=\"\" width=\"25\" />\n                          <span className=\"number\">{item.from}</span>\n                          <span className=\"time\">\n                            {new Date(item.created_at).toLocaleTimeString()}\n                          </span>\n                        </div>\n                        <div className=\"call-info\">\n                          <span>Tried to call on {item.to}</span>\n                            <button onClick={(e) => this.archiveCall(item.id)}>\n                             {item.is_archived ? 'Unarchive' : 'Archive'} \n                            </button>\n                        </div>\n                        {this.listOfCalls.includes(item.id) ? (\n                          <div className=\"detail\">\n                            <hr />\n                            <div className=\"card\">\n                              <div className=\"description\">\n                                <span className=\"title\">Created at: </span>\n                                <span>\n                                  {new Date(\n                                    item.created_at\n                                  ).toLocaleDateString()}\n                                </span>\n                              </div>\n                              <div className=\"description\">\n                                <span className=\"title\">Duration: </span>\n                                <span>{item.duration}</span>\n                              </div>\n                              <div className=\"description\">\n                                <span className=\"title\">Call type: </span>\n                                <span>{item.call_type}</span>\n                              </div>\n                              <div className=\"description\">\n                                <span className=\"title\">Notes: </span>\n                                {item.notes.length >= 1 ? (\n                                  item.notes.map((note: any, key: any) => (\n                                    <span key={key}>{note.content}</span>\n                                  ))\n                                ) : (\n                                  <span>No notes</span>\n                                )}\n                              </div>\n                            </div>\n                          </div>\n                        ) : null}\n                        <div className=\"footer\">\n                          <img\n                            onClick={(e) => this.toggleDetailCall(item.id)}\n                            src={\n                              this.listOfCalls.includes(item.id)\n                                ? arrowUp\n                                : arrowDown\n                            }\n                            alt=\"\"\n                            width=\"12\"\n                          />\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                  </div>\n                ))}\n              <Pagination\n                activePage={this.state.offset}\n                itemsCountPerPage={this.state.limit}\n                totalItemsCount={this.state.totalCount}\n                pageRangeDisplayed={3}\n                onChange={this.handlePageChange.bind(this)}\n              />\n            </div>\n          )}\n        </div>\n      </Container>\n    );\n  }\n}\n\nexport default withRouter(Calls);\n","D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\components\\Calls\\styles.ts",[],"D:\\ProjetosPessoais-Front\\reactJs\\aircall\\aircall\\src\\services\\VerifyToken.tsx",[],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\index.tsx",[],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\App.tsx",[],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\routes\\index.js",["133"],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\services\\VerifyToken.tsx",[],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\pages\\Home\\Home.tsx",["134","135","136","137","138","139"],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\pages\\Login\\Login.tsx",[],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\style\\index.ts",["140"],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\pages\\Home\\styles.ts",[],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\pages\\Login\\styles.ts",[],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\services\\AuthService.tsx",["141"],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\components\\Calls\\index.tsx",["142","143"],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\services\\api.js",[],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\components\\Calls\\styles.ts",[],"D:\\ProjetosPessoais-Front\\reactJs\\frontend-hiring-test\\src\\services\\CallService.tsx",["144"],{"ruleId":"145","replacedBy":"146"},{"ruleId":"147","replacedBy":"148"},{"ruleId":"149","severity":1,"message":"150","line":2,"column":50,"nodeType":"151","messageId":"152","endLine":2,"endColumn":60},{"ruleId":"153","severity":1,"message":"154","line":1,"column":8,"nodeType":"151","messageId":"152","endLine":1,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":5,"column":5,"nodeType":"157","messageId":"158","endLine":6,"endColumn":6},{"ruleId":"155","severity":1,"message":"156","line":5,"column":5,"nodeType":"157","messageId":"158","endLine":6,"endColumn":6},{"ruleId":"153","severity":1,"message":"159","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"160","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":18},{"ruleId":"153","severity":1,"message":"161","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":19},{"ruleId":"153","severity":1,"message":"162","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":29},{"ruleId":"153","severity":1,"message":"163","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":15},{"ruleId":"153","severity":1,"message":"164","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":18},{"ruleId":"153","severity":1,"message":"159","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"166","line":174,"column":15,"nodeType":"167","endLine":174,"endColumn":48},{"ruleId":"149","severity":1,"message":"150","line":2,"column":50,"nodeType":"151","messageId":"152","endLine":2,"endColumn":60},{"ruleId":"153","severity":1,"message":"159","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"153","severity":1,"message":"160","line":3,"column":8,"nodeType":"151","messageId":"152","endLine":3,"endColumn":18},{"ruleId":"153","severity":1,"message":"161","line":4,"column":8,"nodeType":"151","messageId":"152","endLine":4,"endColumn":19},{"ruleId":"153","severity":1,"message":"162","line":5,"column":10,"nodeType":"151","messageId":"152","endLine":5,"endColumn":29},{"ruleId":"153","severity":1,"message":"163","line":6,"column":8,"nodeType":"151","messageId":"152","endLine":6,"endColumn":15},{"ruleId":"153","severity":1,"message":"164","line":7,"column":8,"nodeType":"151","messageId":"152","endLine":7,"endColumn":18},{"ruleId":"153","severity":1,"message":"154","line":1,"column":8,"nodeType":"151","messageId":"152","endLine":1,"endColumn":14},{"ruleId":"155","severity":1,"message":"156","line":5,"column":5,"nodeType":"157","messageId":"158","endLine":6,"endColumn":6},{"ruleId":"153","severity":1,"message":"159","line":1,"column":17,"nodeType":"151","messageId":"152","endLine":1,"endColumn":26},{"ruleId":"165","severity":1,"message":"166","line":174,"column":15,"nodeType":"167","endLine":174,"endColumn":48},{"ruleId":"155","severity":1,"message":"156","line":5,"column":5,"nodeType":"157","messageId":"158","endLine":6,"endColumn":6},"no-native-reassign",["168"],"no-negated-in-lhs",["169"],"no-unused-vars","'withRouter' is defined but never used.","Identifier","unusedVar","@typescript-eslint/no-unused-vars","'styled' is defined but never used.","@typescript-eslint/no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","'Component' is defined but never used.","'MissedCall' is defined but never used.","'CallService' is defined but never used.","'RouteComponentProps' is defined but never used.","'Loading' is defined but never used.","'Pagination' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation"]